basePath: /
definitions:
  handler.Output:
    properties:
      data: {}
      error:
        type: string
    type: object
  model.TaskCreate:
    properties:
      description:
        example: code review by lead
        type: string
      name:
        example: code review
        type: string
    type: object
  model.TaskDelete:
    properties:
      id:
        example: 1
        type: integer
    type: object
  model.TaskUpdate:
    properties:
      description:
        example: code review by lead
        type: string
      id:
        example: 1
        type: integer
      name:
        example: code review
        type: string
    type: object
  model.TrackCreate:
    properties:
      start:
        example: "2006-01-02 15:04:05"
        type: string
      stop:
        example: "2010-01-02 15:04:05"
        type: string
      taskID:
        type: integer
      userID:
        type: integer
    type: object
  model.TrackDelete:
    properties:
      id:
        example: 1
        type: integer
    type: object
  model.TrackUpdate:
    properties:
      id:
        example: 1
        type: integer
      start:
        example: "2006-01-02 15:04:05"
        type: string
      stop:
        example: "2010-01-02 15:04:05"
        type: string
      taskID:
        type: integer
      userID:
        type: integer
    type: object
  model.UserCreate:
    properties:
      address:
        example: LA
        type: string
      name:
        example: Jon
        type: string
      passport:
        example: 123456
        type: integer
      patronymic:
        example: White
        type: string
      surname:
        example: Doe
        type: string
    type: object
  model.UserDelete:
    properties:
      id:
        example: 1
        type: integer
    type: object
  model.UserUpdate:
    properties:
      address:
        example: LA
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Jon
        type: string
      passport:
        example: 123456
        type: integer
      patronymic:
        example: White
        type: string
      surname:
        example: Doe
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Example API
  version: "1.0"
paths:
  /api/task/createTask:
    post:
      consumes:
      - application/json
      description: create task
      parameters:
      - description: used to set task params
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.TaskCreate'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/handler.Output'
        "400":
          description: error
          schema:
            $ref: '#/definitions/handler.Output'
  /api/task/deliteTask:
    delete:
      consumes:
      - application/json
      description: delete task by id
      parameters:
      - description: used to delete task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.TaskDelete'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Output'
        "400":
          description: error
          schema:
            $ref: '#/definitions/handler.Output'
  /api/task/getUser:
    get:
      consumes:
      - application/json
      description: gets task
      parameters:
      - description: used for finding task by id
        in: query
        name: task_id
        type: integer
      - description: used for finding task by name
        in: query
        name: task_name
        type: string
      - description: used for finding task by desc
        in: query
        name: task_description
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: task data
          schema:
            $ref: '#/definitions/handler.Output'
        "400":
          description: error
          schema:
            $ref: '#/definitions/handler.Output'
  /api/task/updateTask:
    patch:
      consumes:
      - application/json
      description: update task by id
      parameters:
      - description: used to update task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.TaskUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/handler.Output'
        "400":
          description: error
          schema:
            $ref: '#/definitions/handler.Output'
  /api/track/createTrack:
    post:
      consumes:
      - application/json
      description: create track
      parameters:
      - description: used to set track
        in: body
        name: track
        required: true
        schema:
          $ref: '#/definitions/model.TrackCreate'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/handler.Output'
        "400":
          description: error
          schema:
            $ref: '#/definitions/handler.Output'
  /api/track/deliteTrack:
    delete:
      consumes:
      - application/json
      description: delete track by id
      parameters:
      - description: used to delete track
        in: body
        name: track
        required: true
        schema:
          $ref: '#/definitions/model.TrackDelete'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Output'
        "400":
          description: error
          schema:
            $ref: '#/definitions/handler.Output'
  /api/track/getTrack:
    get:
      consumes:
      - application/json
      description: gets track
      parameters:
      - description: used for finding track by id
        in: query
        name: track_id
        type: integer
      - description: used for finding track by user id
        in: query
        name: user_id
        type: integer
      - description: used for finding track by task id
        in: query
        name: task_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: track data
          schema:
            $ref: '#/definitions/handler.Output'
        "400":
          description: error
          schema:
            $ref: '#/definitions/handler.Output'
  /api/track/updateTrack:
    patch:
      consumes:
      - application/json
      description: update track by id
      parameters:
      - description: used to update track
        in: body
        name: track
        required: true
        schema:
          $ref: '#/definitions/model.TrackUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/handler.Output'
        "400":
          description: error
          schema:
            $ref: '#/definitions/handler.Output'
  /api/user/createUser:
    post:
      consumes:
      - application/json
      description: create user
      parameters:
      - description: used to set user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserCreate'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/handler.Output'
        "400":
          description: error
          schema:
            $ref: '#/definitions/handler.Output'
  /api/user/deleteUser:
    delete:
      consumes:
      - application/json
      description: delete user by id
      parameters:
      - description: used to delete user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserDelete'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Output'
        "400":
          description: error
          schema:
            $ref: '#/definitions/handler.Output'
  /api/user/getUser:
    get:
      consumes:
      - application/json
      description: gets user by id/name/surname/...
      parameters:
      - description: used for finding user by id
        in: query
        name: user_id
        type: integer
      - description: used for finding user by name
        in: query
        name: user_name
        type: string
      - description: used for finding user by surname
        in: query
        name: user_surname
        type: string
      - description: used for finding user by patronymic
        in: query
        name: user_patronymic
        type: string
      - description: used for finding user by address
        in: query
        name: user_address
        type: string
      - description: used for finding user by passport
        in: query
        name: user_passport
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: user data
          schema:
            $ref: '#/definitions/handler.Output'
        "400":
          description: error
          schema:
            $ref: '#/definitions/handler.Output'
  /api/user/getUsers:
    get:
      consumes:
      - application/json
      description: getting users
      parameters:
      - description: max items on page
        in: query
        name: limit
        required: true
        type: integer
      - description: starts from 1
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: list of users
          schema:
            $ref: '#/definitions/handler.Output'
        "400":
          description: error
          schema:
            $ref: '#/definitions/handler.Output'
  /api/user/labourCosts:
    get:
      consumes:
      - application/json
      description: gives tracks
      parameters:
      - description: used for finding tracks
        in: query
        name: user_id
        required: true
        type: integer
      - description: used for left edge of dates
        in: query
        name: from
        required: true
        type: string
      - description: used for right edge of dates
        in: query
        name: to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: list of tracks
          schema:
            $ref: '#/definitions/handler.Output'
        "400":
          description: error
          schema:
            $ref: '#/definitions/handler.Output'
  /api/user/updateUser:
    patch:
      consumes:
      - application/json
      description: update user by id
      parameters:
      - description: used to update user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/handler.Output'
        "400":
          description: error
          schema:
            $ref: '#/definitions/handler.Output'
swagger: "2.0"
